From b201aa82309c03508d15dcbcb059a803a954134c Mon Sep 17 00:00:00 2001
From: Donald Sharp <sharpd@nvidia.com>
Date: Thu, 1 May 2025 10:09:47 -0400
Subject: [PATCH] zebra: Prevent active setting if interface is not operative

Currently Installing nhg's has two paths for installation:
a) A route comes in with a new nhg that will be selected.
Zebra will check that the nexthops are good and signal
that the route is ready for installation.  This in turn
causes the nexthop to be installed first before the route
installation.  This nexthop group installation then looks
at each singleton and attempts to install those as well.
This is a way to get routes installed quickly into the system
if needed.

b) A interface has an event that causes a nexthop group
to change.  This will cause singletons to be handled appropriately
and then once those are handled and installed the handler
for the nexthop install success will walk the nexthop groups
that use that nexthop and reinstalls them as well.

Unfortunately both A and B are currently funneled through
the same function.

Now for the problem that is being seen:

If you have a NHG A that uses NHG B/C/D nexthops.  Imagine
that the B and C interfaces are down.  The NHG A will have
B( inactive/!installed), C(inactive/!installed), D(active/installed)

Now if interface B comes up, this will cause nexthop B to be
reinstalled.  After B comes back up we will call a nexthop
group reinstallation for A.  Since it is using the same
functionality to reinstall, it looks at all it's singletons
and sees that C is not installed and it was marking C as active,
even though the interface is down) and attempting to reinstall it.

Unfortunately if interface C happens to be up in the kernel, but
not yet in zebra, you end up with nh C being installed and we
mark the nh C as valid and installed.  Then when interface
C actually comes up, it sees that the nhg C is up and does
nothing.  Leaving the nhg's in a broken state.

Modify the active setting to not set a singleton NH as
active if the interface is not operational.

Signed-off-by: Donald Sharp <sharpd@nvidia.com>
---
 zebra/zebra_nhg.c | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/zebra/zebra_nhg.c b/zebra/zebra_nhg.c
index 99750b3db..7ca6700bf 100644
--- a/zebra/zebra_nhg.c
+++ b/zebra/zebra_nhg.c
@@ -2768,8 +2768,14 @@ static bool zebra_nhg_set_valid_if_active(struct nhg_hash_entry *nhe)
 	}
 
 	/* should be fully resolved singleton at this point */
-	if (CHECK_FLAG(nhe->nhg.nexthop->flags, NEXTHOP_FLAG_ACTIVE))
-		valid = true;
+	if (CHECK_FLAG(nhe->nhg.nexthop->flags, NEXTHOP_FLAG_ACTIVE)) {
+		struct interface *ifp = if_lookup_by_index(nhe->nhg.nexthop->ifindex, nhe->vrf_id);
+
+		if (!ifp || !if_is_operative(ifp))
+			valid = false;
+		else
+			valid = true;
+	}
 
 done:
 	if (valid)
-- 
2.39.5

